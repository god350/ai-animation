/**
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { gemini15Flash, googleAI } from '@genkit-ai/googleai';
import { genkit, z, defineFlow } from 'genkit';
import { generateVideoScriptFlow } from './video';

const ai = genkit({
  plugins: [googleAI()],
});

const characterGenerator = ai.definePrompt({
  name: 'Character Prompt',
  model: gemini15Flash,
  input: {
    schema: z.object({
      inspiration: z.string(),
    }),
  },
  output: {
    format: 'json',
    schema: z.object({
      name: z.string(),
      strength: z.number(),
      intelligence: z.number(),
      description: z.string(),
    }),
  },
  prompt: `You're a expert DnD designer, create a new character.
    Base the character on {{inspiration}} but don't make it
    an exact match.`,
});

export const characterFlow = defineFlow(
  {
    name: 'characterFlow',
    inputSchema: z.object({ inspiration: z.string() }),
    outputSchema: z.any(),
  },
  async (input) => {
    const character = await characterGenerator(input);
    return character.output;
  }
);

export { generateVideoScriptFlow };
